{"version":3,"sources":["contexts/freeFonts.js","containers/PageRouter.js","containers/App.js","index.js"],"names":["Context","createContext","Provider","FreeFontsProvider","Consumer","state","loading","infomation","textinfo","colorinfo","selectFont","selectFontH","selectText","selectColor","selectBgColor","selectCss","selectHtml","selectStyle","selectDownload","selectLicense","selectWeight","defaultState","dataList","data","fonts","map","info","dataText","text","dataColor","color","_this","setState","actions","handleLink","e","name","nameEng","css","html","style","weight","download","license","ranNum","Math","floor","random","length","bgcolor","handleTextChange","id","this","value","react_default","a","createElement","props","children","Component","pageRouter","AppProvider","_ref","contexts","reduce","prev","context","React","App","App_AppProvider","PageRouter","ReactDOM","render","containers_App","document","getElementById"],"mappings":"2MAGMA,EAAUC,0BACRC,EAA0CF,EAA1CE,SAEFC,GAF4CH,EAAhCI,oNAGhBC,MAAQ,CACNC,SAAS,EACTC,WAAY,GACZC,SAAU,GACVC,UAAW,GACXC,WAAY,GACZC,YAAa,GACbC,WAAY,GACZC,YAAa,GACbC,cAAe,GACfC,UAAW,GACXC,WAAY,GACZC,YAAa,GACbC,eAAgB,GAChBC,cAAe,GACfC,aAAc,MAGhBC,aAAe,WACb,IAAIC,EAAWC,EAAKC,MAAMC,IAAI,SAAAC,GAAI,OAAIA,IAClCC,EAAWJ,EAAKK,KAAKH,IAAI,SAAAC,GAAI,OAAIA,IACjCG,EAAYN,EAAKO,MAAML,IAAI,SAAAC,GAAI,OAAIA,IACvCK,EAAKC,SAAS,CACZzB,WAAYe,EACZd,SAAUmB,EACVlB,UAAWoB,OAYfI,QAAU,CACRC,WAAY,SACVC,EACA3B,EACA4B,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GACG,IAUKlC,EAAcsB,EAAK1B,MAAnBI,UAEJmC,EAASC,KAAKC,MAAMD,KAAKE,SAAWtC,EAAUuC,QAElDjB,EAAKC,SAAS,CACZtB,WAAY2B,EACZ1B,YAAayB,EACbxB,WAAYJ,EACZK,YAAaJ,EAAUmC,GAAQd,MAC/BhB,cAAeL,EAAUmC,GAAQK,QACjClC,UAAWuB,EACXtB,WAAYuB,EACZtB,YAAauB,EACbpB,aAAcqB,EACdvB,eAAgBwB,EAChBvB,cAAewB,KAGnBO,iBAAkB,SAAAtB,GACXA,EAGHG,EAAKC,SAAS,CACZxB,SAAU,CACR,CACE2C,GAAI,IACJvB,KAAMA,MANZG,EAAKV,oGA/CT+B,KAAK/B,gDA6DE,IAEDgC,EAAQ,CAAEhD,MADW+C,KAAnB/C,MACe4B,QADImB,KAAZnB,SAEf,OAAOqB,EAAAC,EAAAC,cAACtD,EAAD,CAAUmD,MAAOA,GAAQD,KAAKK,MAAMC,iBAjGfC,kBCWjBC,mLAVX,OAKEN,EAAAC,EAAAC,cAAA,6CAPmBG,aCDnBE,EAAc,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAUL,EAAbI,EAAaJ,SAAb,OAClBK,EAASC,OACP,SAACC,EAAMC,GAAP,OACEC,IAAMX,cAAcU,EAAS,CAC3BR,SAAUO,KAEdP,IAaWU,mLARX,OACEd,EAAAC,EAAAC,cAACa,EAAD,CAAaN,SAAU,CAAC5D,IACtBmD,EAAAC,EAAAC,cAACc,EAAD,cAJUX,aCRlBY,IAASC,OAAOlB,EAAAC,EAAAC,cAACiB,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.fbc3fb56.chunk.js","sourcesContent":["import React, { Component, createContext } from 'react';\r\nimport data from '../lib/data.json';\r\n\r\nconst Context = createContext();\r\nconst { Provider, Consumer: FreeFontsConsumer } = Context;\r\n\r\nclass FreeFontsProvider extends Component {\r\n  state = {\r\n    loading: false,\r\n    infomation: [],\r\n    textinfo: [],\r\n    colorinfo: [],\r\n    selectFont: '',\r\n    selectFontH: '',\r\n    selectText: '',\r\n    selectColor: '',\r\n    selectBgColor: '',\r\n    selectCss: '',\r\n    selectHtml: '',\r\n    selectStyle: '',\r\n    selectDownload: '',\r\n    selectLicense: '',\r\n    selectWeight: []\r\n  };\r\n\r\n  defaultState = () => {\r\n    let dataList = data.fonts.map(info => info);\r\n    let dataText = data.text.map(info => info);\r\n    let dataColor = data.color.map(info => info);\r\n    this.setState({\r\n      infomation: dataList,\r\n      textinfo: dataText,\r\n      colorinfo: dataColor\r\n    });\r\n  };\r\n\r\n  ///////////////////////////////////////////////////////////////////////////////\r\n\r\n  componentDidMount() {\r\n    this.defaultState();\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////////////////////////\r\n\r\n  actions = {\r\n    handleLink: (\r\n      e,\r\n      textinfo,\r\n      name,\r\n      nameEng,\r\n      css,\r\n      html,\r\n      style,\r\n      weight,\r\n      download,\r\n      license\r\n    ) => {\r\n      // if (!this.state.loading) {\r\n      //   e.preventDefault();\r\n      //   setTimeout(function() {\r\n      //     alert('Hello');\r\n      //   }, 3000);\r\n      // } else {\r\n      //   console.log('222');\r\n      // }\r\n\r\n      const { colorinfo } = this.state;\r\n\r\n      let ranNum = Math.floor(Math.random() * colorinfo.length);\r\n\r\n      this.setState({\r\n        selectFont: nameEng,\r\n        selectFontH: name,\r\n        selectText: textinfo,\r\n        selectColor: colorinfo[ranNum].color,\r\n        selectBgColor: colorinfo[ranNum].bgcolor,\r\n        selectCss: css,\r\n        selectHtml: html,\r\n        selectStyle: style,\r\n        selectWeight: weight,\r\n        selectDownload: download,\r\n        selectLicense: license\r\n      });\r\n    },\r\n    handleTextChange: text => {\r\n      if (!text) {\r\n        this.defaultState();\r\n      } else {\r\n        this.setState({\r\n          textinfo: [\r\n            {\r\n              id: 100,\r\n              text: text\r\n            }\r\n          ]\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { state, actions } = this;\r\n    const value = { state, actions };\r\n    return <Provider value={value}>{this.props.children}</Provider>;\r\n  }\r\n}\r\n\r\nfunction useFreeFonts(WrappedComponent) {\r\n  return function useTimeline(props) {\r\n    return (\r\n      <FreeFontsConsumer>\r\n        {({ state, actions }) => (\r\n          <WrappedComponent\r\n            loading={state.loading}\r\n            infomation={state.infomation}\r\n            textinfo={state.textinfo}\r\n            colorinfo={state.colorinfo}\r\n            selectFont={state.selectFont}\r\n            selectFontH={state.selectFontH}\r\n            selectText={state.selectText}\r\n            selectColor={state.selectColor}\r\n            selectBgColor={state.selectBgColor}\r\n            selectCss={state.selectCss}\r\n            selectHtml={state.selectHtml}\r\n            selectStyle={state.selectStyle}\r\n            selectWeight={state.selectWeight}\r\n            selectDownload={state.selectDownload}\r\n            selectLicense={state.selectLicense}\r\n            onLink={actions.handleLink}\r\n            onTextChange={actions.handleTextChange}\r\n          />\r\n        )}\r\n      </FreeFontsConsumer>\r\n    );\r\n  };\r\n}\r\n\r\nexport { FreeFontsProvider, FreeFontsConsumer, useFreeFonts };\r\n","import React, { Component } from 'react';\r\n// import { BrowserRouter as Router, Route } from 'react-router-dom';\r\n// import Front from '../routes/Front';\r\n// import Page from '../routes/Page';\r\n\r\nclass pageRouter extends Component {\r\n  render() {\r\n    return (\r\n      // <Router>\r\n      //   <Route exact path=\"/\" component={Front} />\r\n      //   <Route path=\"/page\" component={Page} />\r\n      // </Router>\r\n      <div>11111111111111111111111</div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default pageRouter;\r\n","import React, { Component } from 'react';\nimport { FreeFontsProvider } from '../contexts/freeFonts';\nimport PageRouter from './PageRouter';\n\nconst AppProvider = ({ contexts, children }) =>\n  contexts.reduce(\n    (prev, context) =>\n      React.createElement(context, {\n        children: prev\n      }),\n    children\n  );\n\nclass App extends Component {\n  render() {\n    return (\n      <AppProvider contexts={[FreeFontsProvider]}>\n        <PageRouter />\n      </AppProvider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}