{"version":3,"sources":["contexts/freeFonts.js","componets/front/FontListLi.js","componets/front/FontList.js","componets/front/FontSearch.js","componets/front/FrontMain.js","routes/Header.js","routes/Front.js","containers/PageRouter.js","containers/App.js","index.js"],"names":["Context","createContext","Provider","FreeFontsConsumer","Consumer","FreeFontsProvider","state","loading","infomation","textinfo","colorinfo","selectFont","selectFontH","selectText","selectColor","selectBgColor","selectCss","selectHtml","selectStyle","selectDownload","selectLicense","selectWeight","defaultState","dataList","data","fonts","map","info","dataText","text","dataColor","color","_this","setState","actions","handleLink","e","name","nameEng","css","html","style","weight","download","license","ranNum","Math","floor","random","length","bgcolor","handleTextChange","id","this","value","react_default","a","createElement","props","children","Component","useFreeFonts","WrappedComponent","_ref","onLink","onTextChange","FontListLi","description","className","react_contenteditable_default","tagName","fontFamily","document","body","backgroundColor","_this$props","list","index","componets_front_FontListLi","key","handleChange","target","type","placeholder","onChange","FrontMain","front_FontSearch","front_FontList","history","Header","toogle","handleOpen","handleCloss","onClick","react_icons_kit","icon","ic_face","title","href","rel","ic_report_problem","Front","Fragment","src_routes_Header","componets_front_FrontMain","pageRouter","react_router_dom","basename","process","react_router","exact","path","component","AppProvider","contexts","reduce","prev","context","React","App","App_AppProvider","PageRouter","ReactDOM","render","containers_App","getElementById"],"mappings":"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","file":"static/js/main.4296e0a9.chunk.js","sourcesContent":["import React, { Component, createContext } from 'react';\r\nimport data from '../lib/data.json';\r\n\r\nconst Context = createContext();\r\nconst { Provider, Consumer: FreeFontsConsumer } = Context;\r\n\r\nclass FreeFontsProvider extends Component {\r\n  state = {\r\n    loading: false,\r\n    infomation: [],\r\n    textinfo: [],\r\n    colorinfo: [],\r\n    selectFont: '',\r\n    selectFontH: '',\r\n    selectText: '',\r\n    selectColor: '',\r\n    selectBgColor: '',\r\n    selectCss: '',\r\n    selectHtml: '',\r\n    selectStyle: '',\r\n    selectDownload: '',\r\n    selectLicense: '',\r\n    selectWeight: []\r\n  };\r\n\r\n  defaultState = () => {\r\n    let dataList = data.fonts.map(info => info);\r\n    let dataText = data.text.map(info => info);\r\n    let dataColor = data.color.map(info => info);\r\n    this.setState({\r\n      infomation: dataList,\r\n      textinfo: dataText,\r\n      colorinfo: dataColor\r\n    });\r\n  };\r\n\r\n  ///////////////////////////////////////////////////////////////////////////////\r\n\r\n  componentDidMount() {\r\n    this.defaultState();\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////////////////////////\r\n\r\n  actions = {\r\n    handleLink: (\r\n      e,\r\n      textinfo,\r\n      name,\r\n      nameEng,\r\n      css,\r\n      html,\r\n      style,\r\n      weight,\r\n      download,\r\n      license\r\n    ) => {\r\n      // if (!this.state.loading) {\r\n      //   e.preventDefault();\r\n      //   setTimeout(function() {\r\n      //     alert('Hello');\r\n      //   }, 3000);\r\n      // } else {\r\n      //   console.log('222');\r\n      // }\r\n\r\n      const { colorinfo } = this.state;\r\n\r\n      let ranNum = Math.floor(Math.random() * colorinfo.length);\r\n\r\n      this.setState({\r\n        selectFont: nameEng,\r\n        selectFontH: name,\r\n        selectText: textinfo,\r\n        selectColor: colorinfo[ranNum].color,\r\n        selectBgColor: colorinfo[ranNum].bgcolor,\r\n        selectCss: css,\r\n        selectHtml: html,\r\n        selectStyle: style,\r\n        selectWeight: weight,\r\n        selectDownload: download,\r\n        selectLicense: license\r\n      });\r\n    },\r\n    handleTextChange: text => {\r\n      if (!text) {\r\n        this.defaultState();\r\n      } else {\r\n        this.setState({\r\n          textinfo: [\r\n            {\r\n              id: 100,\r\n              text: text\r\n            }\r\n          ]\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { state, actions } = this;\r\n    const value = { state, actions };\r\n    return <Provider value={value}>{this.props.children}</Provider>;\r\n  }\r\n}\r\n\r\nfunction useFreeFonts(WrappedComponent) {\r\n  return function useTimeline(props) {\r\n    return (\r\n      <FreeFontsConsumer>\r\n        {({ state, actions }) => (\r\n          <WrappedComponent\r\n            loading={state.loading}\r\n            infomation={state.infomation}\r\n            textinfo={state.textinfo}\r\n            colorinfo={state.colorinfo}\r\n            selectFont={state.selectFont}\r\n            selectFontH={state.selectFontH}\r\n            selectText={state.selectText}\r\n            selectColor={state.selectColor}\r\n            selectBgColor={state.selectBgColor}\r\n            selectCss={state.selectCss}\r\n            selectHtml={state.selectHtml}\r\n            selectStyle={state.selectStyle}\r\n            selectWeight={state.selectWeight}\r\n            selectDownload={state.selectDownload}\r\n            selectLicense={state.selectLicense}\r\n            onLink={actions.handleLink}\r\n            onTextChange={actions.handleTextChange}\r\n          />\r\n        )}\r\n      </FreeFontsConsumer>\r\n    );\r\n  };\r\n}\r\n\r\nexport { FreeFontsProvider, FreeFontsConsumer, useFreeFonts };\r\n","import React from 'react';\r\n// import { Link } from 'react-router-dom';\r\nimport ContentEditable from 'react-contenteditable';\r\nimport './FontListLi.scss';\r\n\r\nconst FontListLi = ({\r\n  id,\r\n  name,\r\n  nameEng,\r\n  description,\r\n  css,\r\n  html,\r\n  style,\r\n  weight,\r\n  download,\r\n  license,\r\n  textinfo,\r\n  onLink,\r\n  loading\r\n}) => {\r\n  return (\r\n    <li>\r\n      {/* <Link\r\n        onClick={e =>\r\n          onLink(\r\n            e,\r\n            textinfo,\r\n            name,\r\n            nameEng,\r\n            css,\r\n            html,\r\n            style,\r\n            weight,\r\n            download,\r\n            license\r\n          )\r\n        }\r\n        to={{\r\n          pathname: `/page/${nameEng.replace(/(\\s*)/g, '')}`,\r\n          search: `?id=${id}`\r\n          // state: { detail: 'aaaaaaaaa' }\r\n        }}\r\n      >\r\n        <h3>\r\n          <span>{name}</span>\r\n        </h3>\r\n        <div className=\"flex\">\r\n          <p className=\"left\">{description}</p>\r\n          <p className=\"right\">({weight.length} Styles)</p>\r\n        </div>\r\n      </Link> */}\r\n      <div className=\"areas\">\r\n        <ContentEditable\r\n          html={textinfo} // innerHTML of the editable div\r\n          tagName=\"p\" // Use a custom HTML tag (uses a div by default)\r\n          style={{\r\n            fontFamily: nameEng\r\n          }}\r\n        />\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default FontListLi;\r\n","import React, { Component } from 'react';\r\nimport { useFreeFonts } from '../../contexts/freeFonts';\r\nimport FontListLi from './FontListLi';\r\nimport './FontList.css';\r\n\r\nclass FrontList extends Component {\r\n  componentDidMount() {\r\n    document.body.style.backgroundColor = '#fff';\r\n  }\r\n\r\n  render() {\r\n    const { infomation, textinfo, onLink } = this.props;\r\n\r\n    const list = infomation.map((info, index) => {\r\n      let ranNum = Math.floor(Math.random() * textinfo.length);\r\n      return (\r\n        <FontListLi\r\n          key={index}\r\n          id={info.id}\r\n          name={info.name}\r\n          nameEng={info.nameEng}\r\n          description={info.description}\r\n          css={info.css}\r\n          html={info.html}\r\n          style={info.style}\r\n          weight={info.weight}\r\n          download={info.download}\r\n          license={info.license}\r\n          textinfo={textinfo[ranNum].text}\r\n          onLink={onLink}\r\n          loading={this.props.loading}\r\n        />\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"FontList\">\r\n        <ol className=\"list\">{list}</ol>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default useFreeFonts(FrontList);\r\n","import React, { Component } from 'react';\r\nimport { useFreeFonts } from '../../contexts/freeFonts';\r\nimport './FontSearch.scss';\r\n\r\nclass FronSearch extends Component {\r\n  handleChange = e => {\r\n    this.props.onTextChange(e.target.value);\r\n  };\r\n\r\n  render() {\r\n    const { handleChange } = this;\r\n\r\n    return (\r\n      <div className=\"FontSearch\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"자유롭게 글을 넣어주세요.\"\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default useFreeFonts(FronSearch);\r\n","import React, { Component } from 'react';\r\nimport FontList from './FontList';\r\nimport FronSearch from './FontSearch';\r\nimport './FrontMain.css';\r\n\r\nclass FrontMain extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"FrontMain\">\r\n        <FronSearch />\r\n        <FontList history={this.props.history} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FrontMain;\r\n","import React, { Component } from 'react';\r\nimport { Icon } from 'react-icons-kit';\r\nimport { ic_face, ic_report_problem } from 'react-icons-kit/md';\r\n\r\nimport './Header.scss';\r\n\r\nclass Header extends Component {\r\n  state = {\r\n    toogle: true\r\n  };\r\n\r\n  handleOpen = () => {\r\n    this.setState({\r\n      toogle: false\r\n    });\r\n  };\r\n  handleCloss = () => {\r\n    this.setState({\r\n      toogle: true\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { handleOpen, handleCloss } = this;\r\n    const { toogle } = this.state;\r\n\r\n    return (\r\n      <header>\r\n        <h1 className=\"h1\">FREE FONTS</h1>\r\n        <div className=\"etc\">\r\n          <button type=\"button\" onClick={handleOpen}>\r\n            <Icon icon={ic_face} title=\"\" /> <span>제작 정보</span>\r\n          </button>\r\n        </div>\r\n\r\n        {!toogle && (\r\n          <div className=\"layer\" onClick={handleCloss}>\r\n            <div className=\"area\">\r\n              <div className=\"bg\">\r\n                <h5>\r\n                  공부를 목적으로 제작 된 사이트입니다.\r\n                  <br />\r\n                  출처에 있는 사이트의 콘텐츠와 디자인을 사용하였습니다.\r\n                </h5>\r\n                <p className=\"email\">limjungk@empas.com</p>\r\n                <div className=\"su\">\r\n                  <p>출처 :</p>\r\n                  <ul>\r\n                    <li>\r\n                      <a\r\n                        href=\"https://fonts.google.com/\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                      >\r\n                        - <span>Google Fonts</span>\r\n                      </a>\r\n                    </li>\r\n                    <li>\r\n                      <a\r\n                        href=\"http://youngkang.me/hangul-webfont-showcase/\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                      >\r\n                        - <span>한글 웹폰트 글꼴보기집</span>\r\n                      </a>\r\n                    </li>\r\n                    <li>\r\n                      <a\r\n                        href=\"https://noonnu.cc/\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                      >\r\n                        - <span>눈누 상업용 무료한글폰트 사이트</span>\r\n                      </a>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n              <Icon icon={ic_report_problem} title=\"\" />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport { FrontMain } from '../componets/front';\r\nimport Header from './Header';\r\n\r\nclass Front extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Header />\r\n        <FrontMain history={this.props.history} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Front;\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport Front from '../routes/Front';\r\n// import Page from '../routes/Page';\r\n\r\nclass pageRouter extends Component {\r\n  render() {\r\n    return (\r\n      // <Router>\r\n      //   <Route exact path=\"/\" component={Front} />\r\n      //   <Route path=\"/page\" component={Page} />\r\n      // </Router>\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <Route exact path=\"/\" component={Front} />\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default pageRouter;\r\n","import React, { Component } from 'react';\nimport { FreeFontsProvider } from '../contexts/freeFonts';\nimport PageRouter from './PageRouter';\n\nconst AppProvider = ({ contexts, children }) =>\n  contexts.reduce(\n    (prev, context) =>\n      React.createElement(context, {\n        children: prev\n      }),\n    children\n  );\n\nclass App extends Component {\n  render() {\n    return (\n      <AppProvider contexts={[FreeFontsProvider]}>\n        <PageRouter />\n      </AppProvider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}