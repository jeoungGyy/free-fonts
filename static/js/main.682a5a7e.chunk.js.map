{"version":3,"sources":["contexts/freeFonts.js","componets/front/FontListLi.js","componets/front/FontList.js","componets/front/FontSearch.js","componets/front/FrontMain.js","routes/Header.js","routes/Front.js","componets/page/PageView.js","componets/page/PageGuide.js","componets/page/PageMain.js","routes/Page.js","containers/PageRouter.js","containers/App.js","index.js"],"names":["Context","createContext","Provider","FreeFontsConsumer","Consumer","FreeFontsProvider","state","loading","infomation","textinfo","colorinfo","selectFont","selectFontH","selectText","selectColor","selectBgColor","selectCss","selectHtml","selectStyle","selectDownload","selectLicense","selectWeight","defaultState","dataList","data","fonts","map","info","dataText","text","dataColor","color","_this","setState","actions","handleLink","e","name","nameEng","css","html","style","weight","download","license","ranNum","Math","floor","random","length","bgcolor","handleTextChange","id","this","value","react_default","a","createElement","props","children","Component","useFreeFonts","WrappedComponent","_ref","onLink","onTextChange","FontListLi","description","react_router_dom","onClick","to","pathname","concat","replace","search","className","react_contenteditable_default","tagName","fontFamily","document","body","backgroundColor","_this$props","list","index","componets_front_FontListLi","key","handleChange","target","type","placeholder","onChange","FrontMain","front_FontSearch","front_FontList","history","Header","toogle","handleOpen","handleCloss","react_icons_kit","icon","ic_face","title","href","rel","ic_report_problem","Front","Fragment","src_routes_Header","componets_front_FrontMain","choiceText","font","fontH","bgColor","fontWeight","toggle","colorToggle","bgColorToggle","align","tValue","hValue","wValue","handleSliderChange","identity","Object","defineProperty","handleToggle","handleColorToggle","handleBgColorToggle","handleFontWeight","handleAlign","handleChangeColor","hex","handleRandomColor","ranIndex","nextProps","ranColor","urlPram","Number","window","location","substring","split","weightList","_this2","_this$state","weightBody","fontSize","textAlign","lineHeight","letterSpacing","ic_arrow_drop_down","ic_format_align_left","ic_format_align_center","ic_format_align_right","ic_title","es","min","max","tipFormatter","ic_settings_ethernet","step","ic_format_color_text","lib","onChangeComplete","ic_format_color_fill","ic_loop","cssInfo","htmlInfo","styleInfo","PageMain","componets_page_PageView","componets_page_PageGuide","Page","componets_page_PageMain","withRouter","pageRouter","react_router","exact","path","component","AppProvider","contexts","reduce","prev","context","React","App","App_AppProvider","PageRouter","ReactDOM","render","containers_App","getElementById"],"mappings":"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","file":"static/js/main.682a5a7e.chunk.js","sourcesContent":["import React, { Component, createContext } from 'react';\r\nimport data from '../lib/data.json';\r\n\r\nconst Context = createContext();\r\nconst { Provider, Consumer: FreeFontsConsumer } = Context;\r\n\r\nclass FreeFontsProvider extends Component {\r\n  state = {\r\n    loading: false,\r\n    infomation: [],\r\n    textinfo: [],\r\n    colorinfo: [],\r\n    selectFont: '',\r\n    selectFontH: '',\r\n    selectText: '',\r\n    selectColor: '',\r\n    selectBgColor: '',\r\n    selectCss: '',\r\n    selectHtml: '',\r\n    selectStyle: '',\r\n    selectDownload: '',\r\n    selectLicense: '',\r\n    selectWeight: []\r\n  };\r\n\r\n  defaultState = () => {\r\n    let dataList = data.fonts.map(info => info);\r\n    let dataText = data.text.map(info => info);\r\n    let dataColor = data.color.map(info => info);\r\n    this.setState({\r\n      infomation: dataList,\r\n      textinfo: dataText,\r\n      colorinfo: dataColor\r\n    });\r\n  };\r\n\r\n  ///////////////////////////////////////////////////////////////////////////////\r\n\r\n  componentDidMount() {\r\n    this.defaultState();\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////////////////////////\r\n\r\n  actions = {\r\n    handleLink: (\r\n      e,\r\n      textinfo,\r\n      name,\r\n      nameEng,\r\n      css,\r\n      html,\r\n      style,\r\n      weight,\r\n      download,\r\n      license\r\n    ) => {\r\n      // if (!this.state.loading) {\r\n      //   e.preventDefault();\r\n      //   setTimeout(function() {\r\n      //     alert('Hello');\r\n      //   }, 3000);\r\n      // } else {\r\n      //   console.log('222');\r\n      // }\r\n\r\n      const { colorinfo } = this.state;\r\n\r\n      let ranNum = Math.floor(Math.random() * colorinfo.length);\r\n\r\n      this.setState({\r\n        selectFont: nameEng,\r\n        selectFontH: name,\r\n        selectText: textinfo,\r\n        selectColor: colorinfo[ranNum].color,\r\n        selectBgColor: colorinfo[ranNum].bgcolor,\r\n        selectCss: css,\r\n        selectHtml: html,\r\n        selectStyle: style,\r\n        selectWeight: weight,\r\n        selectDownload: download,\r\n        selectLicense: license\r\n      });\r\n    },\r\n    handleTextChange: text => {\r\n      if (!text) {\r\n        this.defaultState();\r\n      } else {\r\n        this.setState({\r\n          textinfo: [\r\n            {\r\n              id: 100,\r\n              text: text\r\n            }\r\n          ]\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { state, actions } = this;\r\n    const value = { state, actions };\r\n    return <Provider value={value}>{this.props.children}</Provider>;\r\n  }\r\n}\r\n\r\nfunction useFreeFonts(WrappedComponent) {\r\n  return function useTimeline(props) {\r\n    return (\r\n      <FreeFontsConsumer>\r\n        {({ state, actions }) => (\r\n          <WrappedComponent\r\n            loading={state.loading}\r\n            infomation={state.infomation}\r\n            textinfo={state.textinfo}\r\n            colorinfo={state.colorinfo}\r\n            selectFont={state.selectFont}\r\n            selectFontH={state.selectFontH}\r\n            selectText={state.selectText}\r\n            selectColor={state.selectColor}\r\n            selectBgColor={state.selectBgColor}\r\n            selectCss={state.selectCss}\r\n            selectHtml={state.selectHtml}\r\n            selectStyle={state.selectStyle}\r\n            selectWeight={state.selectWeight}\r\n            selectDownload={state.selectDownload}\r\n            selectLicense={state.selectLicense}\r\n            onLink={actions.handleLink}\r\n            onTextChange={actions.handleTextChange}\r\n          />\r\n        )}\r\n      </FreeFontsConsumer>\r\n    );\r\n  };\r\n}\r\n\r\nexport { FreeFontsProvider, FreeFontsConsumer, useFreeFonts };\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ContentEditable from 'react-contenteditable';\r\nimport './FontListLi.scss';\r\n\r\nconst FontListLi = ({\r\n  id,\r\n  name,\r\n  nameEng,\r\n  description,\r\n  css,\r\n  html,\r\n  style,\r\n  weight,\r\n  download,\r\n  license,\r\n  textinfo,\r\n  onLink,\r\n  loading\r\n}) => {\r\n  return (\r\n    <li>\r\n      <Link\r\n        onClick={e =>\r\n          onLink(\r\n            e,\r\n            textinfo,\r\n            name,\r\n            nameEng,\r\n            css,\r\n            html,\r\n            style,\r\n            weight,\r\n            download,\r\n            license\r\n          )\r\n        }\r\n        to={{\r\n          pathname: `/page/${nameEng.replace(/(\\s*)/g, '')}`,\r\n          search: `?id=${id}`\r\n          // state: { detail: 'aaaaaaaaa' }\r\n        }}\r\n      >\r\n        <h3>\r\n          <span>{name}</span>\r\n        </h3>\r\n        <div className=\"flex\">\r\n          <p className=\"left\">{description}</p>\r\n          <p className=\"right\">({weight.length} Styles)</p>\r\n        </div>\r\n      </Link>\r\n      <div className=\"areas\">\r\n        <ContentEditable\r\n          html={textinfo} // innerHTML of the editable div\r\n          tagName=\"p\" // Use a custom HTML tag (uses a div by default)\r\n          style={{\r\n            fontFamily: nameEng\r\n          }}\r\n        />\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default FontListLi;\r\n","import React, { Component } from 'react';\r\nimport { useFreeFonts } from '../../contexts/freeFonts';\r\nimport FontListLi from './FontListLi';\r\nimport './FontList.css';\r\n\r\nclass FrontList extends Component {\r\n  componentDidMount() {\r\n    document.body.style.backgroundColor = '#fff';\r\n  }\r\n\r\n  render() {\r\n    const { infomation, textinfo, onLink } = this.props;\r\n\r\n    const list = infomation.map((info, index) => {\r\n      let ranNum = Math.floor(Math.random() * textinfo.length);\r\n      return (\r\n        <FontListLi\r\n          key={index}\r\n          id={info.id}\r\n          name={info.name}\r\n          nameEng={info.nameEng}\r\n          description={info.description}\r\n          css={info.css}\r\n          html={info.html}\r\n          style={info.style}\r\n          weight={info.weight}\r\n          download={info.download}\r\n          license={info.license}\r\n          textinfo={textinfo[ranNum].text}\r\n          onLink={onLink}\r\n          loading={this.props.loading}\r\n        />\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"FontList\">\r\n        <ol className=\"list\">{list}</ol>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default useFreeFonts(FrontList);\r\n","import React, { Component } from 'react';\r\nimport { useFreeFonts } from '../../contexts/freeFonts';\r\nimport './FontSearch.scss';\r\n\r\nclass FronSearch extends Component {\r\n  handleChange = e => {\r\n    this.props.onTextChange(e.target.value);\r\n  };\r\n\r\n  render() {\r\n    const { handleChange } = this;\r\n\r\n    return (\r\n      <div className=\"FontSearch\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"자유롭게 글을 넣어주세요.\"\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default useFreeFonts(FronSearch);\r\n","import React, { Component } from 'react';\r\nimport FontList from './FontList';\r\nimport FronSearch from './FontSearch';\r\nimport './FrontMain.css';\r\n\r\nclass FrontMain extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"FrontMain\">\r\n        <FronSearch />\r\n        <FontList history={this.props.history} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FrontMain;\r\n","import React, { Component } from 'react';\r\nimport { Icon } from 'react-icons-kit';\r\nimport { ic_face, ic_report_problem } from 'react-icons-kit/md';\r\n\r\nimport './Header.scss';\r\n\r\nclass Header extends Component {\r\n  state = {\r\n    toogle: true\r\n  };\r\n\r\n  handleOpen = () => {\r\n    this.setState({\r\n      toogle: false\r\n    });\r\n  };\r\n  handleCloss = () => {\r\n    this.setState({\r\n      toogle: true\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { handleOpen, handleCloss } = this;\r\n    const { toogle } = this.state;\r\n\r\n    return (\r\n      <header>\r\n        <h1 className=\"h1\">FREE FONTS</h1>\r\n        <div className=\"etc\">\r\n          <button type=\"button\" onClick={handleOpen}>\r\n            <Icon icon={ic_face} title=\"\" /> <span>제작 정보</span>\r\n          </button>\r\n        </div>\r\n\r\n        {!toogle && (\r\n          <div className=\"layer\" onClick={handleCloss}>\r\n            <div className=\"area\">\r\n              <div className=\"bg\">\r\n                <h5>\r\n                  공부를 목적으로 제작 된 사이트입니다.\r\n                  <br />\r\n                  출처에 있는 사이트의 콘텐츠와 디자인을 사용하였습니다.\r\n                </h5>\r\n                <p className=\"email\">limjungk@empas.com</p>\r\n                <div className=\"su\">\r\n                  <p>출처 :</p>\r\n                  <ul>\r\n                    <li>\r\n                      <a\r\n                        href=\"https://fonts.google.com/\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                      >\r\n                        - <span>Google Fonts</span>\r\n                      </a>\r\n                    </li>\r\n                    <li>\r\n                      <a\r\n                        href=\"http://youngkang.me/hangul-webfont-showcase/\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                      >\r\n                        - <span>한글 웹폰트 글꼴보기집</span>\r\n                      </a>\r\n                    </li>\r\n                    <li>\r\n                      <a\r\n                        href=\"https://noonnu.cc/\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                      >\r\n                        - <span>눈누 상업용 무료한글폰트 사이트</span>\r\n                      </a>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n              <Icon icon={ic_report_problem} title=\"\" />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport { FrontMain } from '../componets/front';\r\nimport Header from './Header';\r\n\r\nclass Front extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Header />\r\n        <FrontMain history={this.props.history} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Front;\r\n","import React, { Component } from 'react';\r\nimport { useFreeFonts } from '../../contexts/freeFonts';\r\nimport ContentEditable from 'react-contenteditable';\r\nimport { Icon } from 'react-icons-kit';\r\nimport {\r\n  ic_format_align_left,\r\n  ic_format_align_center,\r\n  ic_format_align_right,\r\n  ic_title,\r\n  ic_arrow_drop_down,\r\n  ic_settings_ethernet,\r\n  ic_format_color_text,\r\n  ic_format_color_fill,\r\n  ic_loop\r\n} from 'react-icons-kit/md';\r\nimport Slider from 'rc-slider';\r\nimport 'rc-slider/assets/index.css';\r\nimport { SketchPicker } from 'react-color';\r\nimport './PageView.scss';\r\n\r\nimport data from '../../lib/data.json';\r\n\r\nclass PageView extends Component {\r\n  state = {\r\n    infomation: [],\r\n    choiceText: [],\r\n    font: '',\r\n    fontH: '',\r\n    text: '',\r\n    color: '',\r\n    bgColor: '',\r\n    weight: [],\r\n    fontWeight: '',\r\n    download: '',\r\n    license: '',\r\n    toggle: true,\r\n    colorToggle: true,\r\n    bgColorToggle: true,\r\n    align: '',\r\n    tValue: 80,\r\n    hValue: 1.2,\r\n    wValue: 1\r\n  };\r\n\r\n  defaultState = () => {\r\n    let dataList = data.fonts.map(info => info);\r\n\r\n    this.setState({\r\n      infomation: dataList,\r\n      font: this.props.selectFont,\r\n      fontH: this.props.selectFontH,\r\n      text: this.props.selectText,\r\n      color: this.props.selectColor,\r\n      bgColor: this.props.selectBgColor,\r\n      weight: this.props.selectWeight,\r\n      download: this.props.selectDownload,\r\n      license: this.props.selectLicense\r\n    });\r\n  };\r\n\r\n  handleSliderChange = (value, identity) => {\r\n    this.setState({\r\n      [identity]: value\r\n    });\r\n  };\r\n\r\n  handleToggle = () => {\r\n    this.setState({\r\n      toggle: !this.state.toggle\r\n    });\r\n  };\r\n  handleColorToggle = () => {\r\n    this.setState({\r\n      colorToggle: !this.state.colorToggle\r\n    });\r\n  };\r\n  handleBgColorToggle = () => {\r\n    this.setState({\r\n      bgColorToggle: !this.state.bgColorToggle\r\n    });\r\n  };\r\n\r\n  handleFontWeight = e => {\r\n    const target = e.target.value;\r\n    this.setState({\r\n      fontWeight: target,\r\n      toggle: !this.state.toggle\r\n    });\r\n  };\r\n\r\n  handleAlign = data => {\r\n    this.setState({\r\n      align: data\r\n    });\r\n  };\r\n\r\n  handleChangeColor = (color, identity) => {\r\n    this.setState({\r\n      [identity]: color.hex\r\n    });\r\n  };\r\n\r\n  handleRandomColor = () => {\r\n    const { colorinfo } = this.props;\r\n    const ranIndex = Math.floor(Math.random() * colorinfo.length);\r\n\r\n    this.setState({\r\n      color: colorinfo[ranIndex].color,\r\n      bgColor: colorinfo[ranIndex].bgcolor\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.defaultState();\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (!nextProps) {\r\n    } else {\r\n      const ranNum = Math.floor(Math.random() * nextProps.textinfo.length);\r\n      const ranColor = Math.floor(Math.random() * nextProps.colorinfo.length);\r\n      const urlPram = Number(window.location.href.substring(1).split('=')[1]);\r\n      const weightList = nextProps.infomation[urlPram - 1].weight;\r\n\r\n      // console.log(weightIndex);\r\n\r\n      this.setState({\r\n        font: nextProps.infomation[urlPram - 1].nameEng,\r\n        fontH: nextProps.infomation[urlPram - 1].name,\r\n        text: nextProps.textinfo[ranNum].text,\r\n        color: nextProps.colorinfo[ranColor].color,\r\n        bgColor: nextProps.colorinfo[ranColor].bgcolor,\r\n        weight: weightList,\r\n        download: nextProps.infomation[urlPram - 1].download,\r\n        license: nextProps.infomation[urlPram - 1].license\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      handleToggle,\r\n      handleColorToggle,\r\n      handleBgColorToggle,\r\n      handleFontWeight,\r\n      handleAlign,\r\n      handleSliderChange,\r\n      handleChangeColor,\r\n      handleRandomColor\r\n    } = this;\r\n    const {\r\n      font,\r\n      fontH,\r\n      text,\r\n      color,\r\n      bgColor,\r\n      weight,\r\n      fontWeight,\r\n      toggle,\r\n      colorToggle,\r\n      bgColorToggle,\r\n      align,\r\n      tValue,\r\n      hValue,\r\n      wValue,\r\n      download,\r\n      license\r\n    } = this.state;\r\n    document.body.style.backgroundColor = bgColor;\r\n\r\n    const weightBody = weight.map((info, index) => {\r\n      return (\r\n        <li key={index}>\r\n          <button type=\"button\" onClick={handleFontWeight} value={info}>\r\n            - {info}\r\n          </button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    // console.log(aaa);\r\n\r\n    return (\r\n      <div className=\"PageView\">\r\n        <div className=\"textarea\">\r\n          <ContentEditable\r\n            html={text} // innerHTML of the editable div\r\n            tagName=\"p\" // Use a custom HTML tag (uses a div by default)\r\n            className=\"edit\"\r\n            style={{\r\n              color: color,\r\n              fontFamily: font,\r\n              fontSize: `${tValue}px`,\r\n              fontWeight: !fontWeight\r\n                ? `${weight[0]}`.replace(/[a-z]+|\\s+|[-]/gi, '')\r\n                : `${fontWeight}`.replace(/[a-z]+|\\s+|[-]/gi, ''),\r\n              textAlign: align,\r\n              lineHeight: hValue,\r\n              letterSpacing: `${wValue}px`\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"fontG\">\r\n          {tValue}px / {hValue}px / {wValue}\r\n        </div>\r\n\r\n        <div className=\"controls\">\r\n          <div className=\"div fchoice\">\r\n            <button type=\"button\" className=\"fontS\" onClick={handleToggle}>\r\n              {fontH} {!fontWeight ? weight[0] : fontWeight}{' '}\r\n              <Icon icon={ic_arrow_drop_down} title=\"\" />\r\n            </button>\r\n            {!toggle && <ul className=\"poa\">{weightBody}</ul>}\r\n          </div>\r\n\r\n          <span className=\"blet s1\">|</span>\r\n\r\n          <div className=\"div space\">\r\n            <button\r\n              type=\"button\"\r\n              value=\"left\"\r\n              onClick={() => handleAlign('left')}\r\n            >\r\n              <Icon icon={ic_format_align_left} title=\"왼쪽 정렬\" />\r\n            </button>\r\n            <button type=\"button\" onClick={() => handleAlign('center')}>\r\n              <Icon icon={ic_format_align_center} title=\"가운데 정렬\" />\r\n            </button>\r\n            <button type=\"button\" onClick={() => handleAlign('right')}>\r\n              <Icon icon={ic_format_align_right} title=\"오른쪽 정렬\" />\r\n            </button>\r\n          </div>\r\n\r\n          <span className=\"blet s2\">|</span>\r\n\r\n          <div className=\"div height\">\r\n            <span className=\"fs\">\r\n              <Icon icon={ic_title} title=\"크기\" />\r\n            </span>\r\n            <Slider\r\n              id=\"a\"\r\n              onChange={value => handleSliderChange(value, 'tValue')}\r\n              value={this.state.tValue}\r\n              min={10}\r\n              max={100}\r\n              tipFormatter={value => this.state.value}\r\n            />\r\n            <span className=\"fs\">\r\n              <Icon icon={ic_settings_ethernet} title=\"행간\" className=\"etc\" />\r\n            </span>\r\n            <Slider\r\n              name=\"b\"\r\n              onChange={value => handleSliderChange(value, 'hValue')}\r\n              value={this.state.hValue}\r\n              min={-1}\r\n              max={3}\r\n              step={0.1}\r\n              tipFormatter={value => this.state.value}\r\n            />\r\n            <span className=\"fs\">\r\n              <Icon icon={ic_settings_ethernet} title=\"자간\" />\r\n            </span>\r\n            <Slider\r\n              name=\"c\"\r\n              onChange={value => handleSliderChange(value, 'wValue')}\r\n              value={this.state.wValue}\r\n              min={-15}\r\n              max={20}\r\n              step={0.1}\r\n              tipFormatter={value => this.state.value}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"btns\">\r\n          <div className=\"f\">\r\n            <button type=\"button\" onClick={handleColorToggle}>\r\n              <Icon icon={ic_format_color_text} title=\"글자색\" />\r\n            </button>\r\n            {!colorToggle && (\r\n              <div className=\"poa\">\r\n                <SketchPicker\r\n                  color={color}\r\n                  onChangeComplete={e => handleChangeColor(e, 'color')}\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"c\">\r\n            <button type=\"button\" onClick={handleBgColorToggle}>\r\n              <Icon icon={ic_format_color_fill} title=\"배경색\" />\r\n            </button>\r\n            {!bgColorToggle && (\r\n              <div className=\"poa\">\r\n                <SketchPicker\r\n                  color={bgColor}\r\n                  onChangeComplete={e => handleChangeColor(e, 'bgColor')}\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"l\">\r\n            <button type=\"button\" onClick={handleRandomColor}>\r\n              <Icon icon={ic_loop} title=\"랜덤\" />\r\n            </button>\r\n          </div>\r\n          <a href={download} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <span>다운로드 링크</span>\r\n          </a>\r\n          <a href={license} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <span>라이선스 정보</span>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default useFreeFonts(PageView);\r\n","import React, { Component } from 'react';\r\nimport { useFreeFonts } from '../../contexts/freeFonts';\r\nimport './PageGuide.scss';\r\n\r\nimport data from '../../lib/data.json';\r\n\r\nclass PageGuide extends Component {\r\n  state = {\r\n    infomation: [],\r\n    cssInfo: '',\r\n    htmlInfo: '',\r\n    styleInfo: ''\r\n  };\r\n\r\n  defaultState = () => {\r\n    let dataList = data.fonts.map(info => info);\r\n\r\n    this.setState({\r\n      infomation: dataList,\r\n      cssInfo: this.props.selectCss,\r\n      htmlInfo: this.props.selectHtml,\r\n      styleInfo: this.props.selectStyle\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.defaultState();\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (!nextProps) {\r\n    } else {\r\n      const urlPram = Number(window.location.href.substring(1).split('=')[1]);\r\n\r\n      // console.log(nextProps);\r\n\r\n      this.setState({\r\n        cssInfo: nextProps.infomation[urlPram - 1].css,\r\n        htmlInfo: nextProps.infomation[urlPram - 1].html,\r\n        styleInfo: nextProps.infomation[urlPram - 1].style\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { cssInfo, htmlInfo, styleInfo } = this.state;\r\n    return (\r\n      <div className=\"PageGuide\">\r\n        <h3>CSS에서 사용할 경우.</h3>\r\n        <div className=\"box\">{cssInfo}</div>\r\n        <h3>HTML로 작성할 경우.</h3>\r\n        <div className=\"box\">{htmlInfo}</div>\r\n        <h3>&lt;Style&gt; 태그 안에 font-family 설정.</h3>\r\n        <div className=\"box\">{styleInfo}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default useFreeFonts(PageGuide);\r\n","import React, { Component } from 'react';\r\nimport PageView from './PageView';\r\nimport PageGuide from './PageGuide';\r\nimport './PageMain.scss';\r\n\r\nclass PageMain extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"PageMain\">\r\n        <PageView />\r\n        <PageGuide />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PageMain;\r\n","import React, { Component } from 'react';\r\nimport { PageMain } from '../componets/page';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass Page extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <PageMain />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Page);\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport Front from '../routes/Front';\r\nimport Page from '../routes/Page';\r\n\r\nclass pageRouter extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Route exact path=\"/\" component={Front} />\r\n        <Route path=\"/page\" component={Page} />\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default pageRouter;\r\n","import React, { Component } from 'react';\nimport { FreeFontsProvider } from '../contexts/freeFonts';\nimport PageRouter from './PageRouter';\n\nconst AppProvider = ({ contexts, children }) =>\n  contexts.reduce(\n    (prev, context) =>\n      React.createElement(context, {\n        children: prev\n      }),\n    children\n  );\n\nclass App extends Component {\n  render() {\n    return (\n      <AppProvider contexts={[FreeFontsProvider]}>\n        <PageRouter />\n      </AppProvider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}